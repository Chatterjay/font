name: Windows Build & Auto-Update

on:
  push:
    branches: [ main ]

jobs:
  build-sign-publish:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc

      - name: Clean workspace
        shell: pwsh
        run: |
          if (Test-Path src-tauri/Cargo.toml) {
              cd src-tauri
              cargo clean
              Remove-Item -Force Cargo.lock
              cargo generate-lockfile
              cd ..
          }

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Install dependencies
        run: |
          npm install
          cd src-tauri
          cargo generate-lockfile
          cd ..

      - name: Build signed MSI
        shell: pwsh
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: |
          cd src-tauri
          npm run tauri build -- --target x86_64-pc-windows-msvc --sign --verbose
          # 强制验证产物目录
          if (-not (Test-Path "target/x86_64-pc-windows-msvc/release/bundle/msi")) {
            Write-Error "##[error] 构建产物目录缺失"
            Get-ChildItem target -Recurse | Out-Host
            exit 1
          }

      - name: Generate update manifest
        shell: pwsh
        run: |
          $version = if ($env:GITHUB_REF -like "refs/tags/*") {
            $env:GITHUB_REF -replace 'refs/tags/v', ''
          } else {
            $env:GITHUB_SHA.Substring(0,7)
          }

          $msiFile = Get-ChildItem "src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi" | Select-Object -First 1
          $sigFile = Get-ChildItem "src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.sig" | Select-Object -First 1

          if (-not $msiFile -or -not $sigFile) {
            Write-Error "##[error] 构建产物文件缺失"
            exit 1
          }

          [PSCustomObject]@{
            version = $version
            platforms = @{
              "windows-x86_64" = @{
                signature = (Get-Content $sigFile.FullName -Raw).Trim()
                url = "https://github.com/chatterjay/font/releases/download/v$version/$($msiFile.Name)"
              }
            }
          } | ConvertTo-Json -Depth 3 | Out-File latest.json

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
            latest.json
          draft: false
          overwrite: truename: Windows Build & Auto-Update

on:
  push:
    branches: [ main ]

jobs:
  build-sign-publish:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc

      - name: Clean workspace
        shell: pwsh
        run: |
          if (Test-Path src-tauri/Cargo.toml) {
              cd src-tauri
              cargo clean
              Remove-Item -Force Cargo.lock
              cargo generate-lockfile
              cd ..
          }

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Install dependencies
        run: |
          npm install
          cd src-tauri
          cargo generate-lockfile
          cd ..

      - name: Build signed MSI
        shell: pwsh
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: |
          cd src-tauri
          npm run tauri build -- --target x86_64-pc-windows-msvc --sign --verbose
          # 强制验证产物目录
          if (-not (Test-Path "target/x86_64-pc-windows-msvc/release/bundle/msi")) {
            Write-Error "##[error] 构建产物目录缺失"
            Get-ChildItem target -Recurse | Out-Host
            exit 1
          }

      - name: Generate update manifest
        shell: pwsh
        run: |
          $version = if ($env:GITHUB_REF -like "refs/tags/*") {
            $env:GITHUB_REF -replace 'refs/tags/v', ''
          } else {
            $env:GITHUB_SHA.Substring(0,7)
          }

          $msiFile = Get-ChildItem "src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi" | Select-Object -First 1
          $sigFile = Get-ChildItem "src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.sig" | Select-Object -First 1

          if (-not $msiFile -or -not $sigFile) {
            Write-Error "##[error] 构建产物文件缺失"
            exit 1
          }

          [PSCustomObject]@{
            version = $version
            platforms = @{
              "windows-x86_64" = @{
                signature = (Get-Content $sigFile.FullName -Raw).Trim()
                url = "https://github.com/chatterjay/font/releases/download/v$version/$($msiFile.Name)"
              }
            }
          } | ConvertTo-Json -Depth 3 | Out-File latest.json

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
            latest.json
          draft: false
          overwrite: truename: Windows Build & Auto-Update

on:
  push:
    branches: [ main ]

jobs:
  build-sign-publish:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc

      - name: Clean workspace
        shell: pwsh
        run: |
          if (Test-Path src-tauri/Cargo.toml) {
              cd src-tauri
              cargo clean
              Remove-Item -Force Cargo.lock
              cargo generate-lockfile
              cd ..
          }

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Install dependencies
        run: |
          npm install
          cd src-tauri
          cargo generate-lockfile
          cd ..

      - name: Build signed MSI
        shell: pwsh
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: |
          cd src-tauri
          npm run tauri build -- --target x86_64-pc-windows-msvc --sign --verbose
          # 强制验证产物目录
          if (-not (Test-Path "target/x86_64-pc-windows-msvc/release/bundle/msi")) {
            Write-Error "##[error] 构建产物目录缺失"
            Get-ChildItem target -Recurse | Out-Host
            exit 1
          }

      - name: Generate update manifest
        shell: pwsh
        run: |
          $version = if ($env:GITHUB_REF -like "refs/tags/*") {
            $env:GITHUB_REF -replace 'refs/tags/v', ''
          } else {
            $env:GITHUB_SHA.Substring(0,7)
          }

          $msiFile = Get-ChildItem "src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi" | Select-Object -First 1
          $sigFile = Get-ChildItem "src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.sig" | Select-Object -First 1

          if (-not $msiFile -or -not $sigFile) {
            Write-Error "##[error] 构建产物文件缺失"
            exit 1
          }

          [PSCustomObject]@{
            version = $version
            platforms = @{
              "windows-x86_64" = @{
                signature = (Get-Content $sigFile.FullName -Raw).Trim()
                url = "https://github.com/chatterjay/font/releases/download/v$version/$($msiFile.Name)"
              }
            }
          } | ConvertTo-Json -Depth 3 | Out-File latest.json

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
            latest.json
          draft: false
          overwrite: truename: Windows Build & Auto-Update

on:
  push:
    branches: [ main ]

jobs:
  build-sign-publish:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc

      - name: Clean workspace
        shell: pwsh
        run: |
          if (Test-Path src-tauri/Cargo.toml) {
              cd src-tauri
              cargo clean
              Remove-Item -Force Cargo.lock
              cargo generate-lockfile
              cd ..
          }

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Install dependencies
        run: |
          npm install
          cd src-tauri
          cargo generate-lockfile
          cd ..

      - name: Build signed MSI
        shell: pwsh
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: |
          cd src-tauri
          npm run tauri build -- --target x86_64-pc-windows-msvc --sign --verbose
          # 强制验证产物目录
          if (-not (Test-Path "target/x86_64-pc-windows-msvc/release/bundle/msi")) {
            Write-Error "##[error] 构建产物目录缺失"
            Get-ChildItem target -Recurse | Out-Host
            exit 1
          }

      - name: Generate update manifest
        shell: pwsh
        run: |
          $version = if ($env:GITHUB_REF -like "refs/tags/*") {
            $env:GITHUB_REF -replace 'refs/tags/v', ''
          } else {
            $env:GITHUB_SHA.Substring(0,7)
          }

          $msiFile = Get-ChildItem "src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi" | Select-Object -First 1
          $sigFile = Get-ChildItem "src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.sig" | Select-Object -First 1

          if (-not $msiFile -or -not $sigFile) {
            Write-Error "##[error] 构建产物文件缺失"
            exit 1
          }

          [PSCustomObject]@{
            version = $version
            platforms = @{
              "windows-x86_64" = @{
                signature = (Get-Content $sigFile.FullName -Raw).Trim()
                url = "https://github.com/chatterjay/font/releases/download/v$version/$($msiFile.Name)"
              }
            }
          } | ConvertTo-Json -Depth 3 | Out-File latest.json

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
            latest.json
          draft: false
          overwrite: truename: Windows Build & Auto-Update

on:
  push:
    branches: [ main ]

jobs:
  build-sign-publish:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc

      - name: Clean workspace
        shell: pwsh
        run: |
          if (Test-Path src-tauri/Cargo.toml) {
              cd src-tauri
              cargo clean
              Remove-Item -Force Cargo.lock
              cargo generate-lockfile
              cd ..
          }

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Install dependencies
        run: |
          npm install
          cd src-tauri
          cargo generate-lockfile
          cd ..

      - name: Build signed MSI
        shell: pwsh
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: |
          cd src-tauri
          npm run tauri build -- --target x86_64-pc-windows-msvc --sign --verbose
          # 强制验证产物目录
          if (-not (Test-Path "target/x86_64-pc-windows-msvc/release/bundle/msi")) {
            Write-Error "##[error] 构建产物目录缺失"
            Get-ChildItem target -Recurse | Out-Host
            exit 1
          }

      - name: Generate update manifest
        shell: pwsh
        run: |
          $version = if ($env:GITHUB_REF -like "refs/tags/*") {
            $env:GITHUB_REF -replace 'refs/tags/v', ''
          } else {
            $env:GITHUB_SHA.Substring(0,7)
          }

          $msiFile = Get-ChildItem "src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi" | Select-Object -First 1
          $sigFile = Get-ChildItem "src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.sig" | Select-Object -First 1

          if (-not $msiFile -or -not $sigFile) {
            Write-Error "##[error] 构建产物文件缺失"
            exit 1
          }

          [PSCustomObject]@{
            version = $version
            platforms = @{
              "windows-x86_64" = @{
                signature = (Get-Content $sigFile.FullName -Raw).Trim()
                url = "https://github.com/chatterjay/font/releases/download/v$version/$($msiFile.Name)"
              }
            }
          } | ConvertTo-Json -Depth 3 | Out-File latest.json

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
            latest.json
          draft: false
          overwrite: truename: Windows Build & Auto-Update

on:
  push:
    branches: [ main ]

jobs:
  build-sign-publish:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc

      - name: Clean workspace
        shell: pwsh
        run: |
          if (Test-Path src-tauri/Cargo.toml) {
              cd src-tauri
              cargo clean
              Remove-Item -Force Cargo.lock
              cargo generate-lockfile
              cd ..
          }

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Install dependencies
        run: |
          npm install
          cd src-tauri
          cargo generate-lockfile
          cd ..

      - name: Build signed MSI
        shell: pwsh
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: |
          cd src-tauri
          npm run tauri build -- --target x86_64-pc-windows-msvc --sign --verbose
          # 强制验证产物目录
          if (-not (Test-Path "target/x86_64-pc-windows-msvc/release/bundle/msi")) {
            Write-Error "##[error] 构建产物目录缺失"
            Get-ChildItem target -Recurse | Out-Host
            exit 1
          }

      - name: Generate update manifest
        shell: pwsh
        run: |
          $version = if ($env:GITHUB_REF -like "refs/tags/*") {
            $env:GITHUB_REF -replace 'refs/tags/v', ''
          } else {
            $env:GITHUB_SHA.Substring(0,7)
          }

          $msiFile = Get-ChildItem "src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi" | Select-Object -First 1
          $sigFile = Get-ChildItem "src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.sig" | Select-Object -First 1

          if (-not $msiFile -or -not $sigFile) {
            Write-Error "##[error] 构建产物文件缺失"
            exit 1
          }

          [PSCustomObject]@{
            version = $version
            platforms = @{
              "windows-x86_64" = @{
                signature = (Get-Content $sigFile.FullName -Raw).Trim()
                url = "https://github.com/chatterjay/font/releases/download/v$version/$($msiFile.Name)"
              }
            }
          } | ConvertTo-Json -Depth 3 | Out-File latest.json

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
            latest.json
          draft: false
          overwrite: truename: Windows Build & Auto-Update

on:
  push:
    branches: [ main ]

jobs:
  build-sign-publish:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc

      - name: Clean workspace
        shell: pwsh
        run: |
          if (Test-Path src-tauri/Cargo.toml) {
              cd src-tauri
              cargo clean
              Remove-Item -Force Cargo.lock
              cargo generate-lockfile
              cd ..
          }

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Install dependencies
        run: |
          npm install
          cd src-tauri
          cargo generate-lockfile
          cd ..

      - name: Build signed MSI
        shell: pwsh
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: |
          cd src-tauri
          npm run tauri build -- --target x86_64-pc-windows-msvc --sign --verbose
          # 强制验证产物目录
          if (-not (Test-Path "target/x86_64-pc-windows-msvc/release/bundle/msi")) {
            Write-Error "##[error] 构建产物目录缺失"
            Get-ChildItem target -Recurse | Out-Host
            exit 1
          }

      - name: Generate update manifest
        shell: pwsh
        run: |
          $version = if ($env:GITHUB_REF -like "refs/tags/*") {
            $env:GITHUB_REF -replace 'refs/tags/v', ''
          } else {
            $env:GITHUB_SHA.Substring(0,7)
          }

          $msiFile = Get-ChildItem "src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi" | Select-Object -First 1
          $sigFile = Get-ChildItem "src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.sig" | Select-Object -First 1

          if (-not $msiFile -or -not $sigFile) {
            Write-Error "##[error] 构建产物文件缺失"
            exit 1
          }

          [PSCustomObject]@{
            version = $version
            platforms = @{
              "windows-x86_64" = @{
                signature = (Get-Content $sigFile.FullName -Raw).Trim()
                url = "https://github.com/chatterjay/font/releases/download/v$version/$($msiFile.Name)"
              }
            }
          } | ConvertTo-Json -Depth 3 | Out-File latest.json

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
            latest.json
          draft: false
          overwrite: true