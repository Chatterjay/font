name: Windows Build & AutoUpdate

on:
  push:
    branches:
      - main
    

jobs:
  build-sign-release:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc

      - name: Build signed MSI
        shell: pwsh
        run: |
          cd src-tauri
          Remove-Item -Recurse -Force target -ErrorAction SilentlyContinue
          npm install
          
          # 显示详细构建日志
          npm run tauri build -- --target x86_64-pc-windows-msvc --verbose
          
          # 处理带空格的路径
          $msiFile = Get-ChildItem "target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi" | Select-Object -First 1
          if (-not $msiFile) {
              Write-Error "##[error] MSI 文件未生成"
              exit 1
          }
          
          # 标准化输出路径
          New-Item -ItemType Directory -Force -Path target/release | Out-Null
          Copy-Item $msiFile.FullName "target/release/app.msi"
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      - name: Generate latest.json
        shell: pwsh
        run: |
          $version = $env:GITHUB_REF -replace 'refs/tags/v', ''
          $sigPath = "src-tauri/target/release/app.msi.sig"
          
          if (-not (Test-Path $sigPath)) {
              Write-Error "##[error] 签名文件缺失"
              exit 1
          }
          
          [PSCustomObject]@{
              version = $version
              notes = "Auto Update"
              pub_date = (Get-Date -Format "yyyy-MM-ddTHH:mm:ssZ")
              platforms = @{
                  "windows-x86_64" = @{
                      signature = (Get-Content $sigPath -Raw).Trim()
                      url = "https://github.com/chatterjay/font/releases/download/v$version/app.msi"
                  }
              }
          } | ConvertTo-Json -Depth 3 | Out-File latest.json
          
          # 验证输出
          Get-Content latest.json | Out-Host

      
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            src-tauri/target/release/app.msi
            latest.json
          draft: false
    name: Windows Build & AutoUpdate
on:
  push:
    tags:
      - 'v*'

jobs:
  build-sign-release:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc

      - name: Build signed MSI
        shell: pwsh
        run: |
          cd src-tauri
          Remove-Item -Recurse -Force target -ErrorAction SilentlyContinue
          npm install
          
          # 显示详细构建日志
          npm run tauri build -- --target x86_64-pc-windows-msvc --verbose
          
          # 处理带空格的路径
          $msiFile = Get-ChildItem "target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi" | Select-Object -First 1
          if (-not $msiFile) {
              Write-Error "##[error] MSI 文件未生成"
              exit 1
          }
          
          # 标准化输出路径
          New-Item -ItemType Directory -Force -Path target/release | Out-Null
          Copy-Item $msiFile.FullName "target/release/app.msi"
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      - name: Generate latest.json
        shell: pwsh
        run: |
          $version = $env:GITHUB_REF -replace 'refs/tags/v', ''
          $sigPath = "src-tauri/target/release/app.msi.sig"
          
          if (-not (Test-Path $sigPath)) {
              Write-Error "##[error] 签名文件缺失"
              exit 1
          }
          
          [PSCustomObject]@{
              version = $version
              notes = "Auto Update"
              pub_date = (Get-Date -Format "yyyy-MM-ddTHH:mm:ssZ")
              platforms = @{
                  "windows-x86_64" = @{
                      signature = (Get-Content $sigPath -Raw).Trim()
                      url = "https://github.com/chatterjay/font/releases/download/v$version/app.msi"
                  }
              }
          } | ConvertTo-Json -Depth 3 | Out-File latest.json
          
          # 验证输出
          Get-Content latest.json | Out-Host

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            src-tauri/target/release/app.msi
            latest.json
          draft: false