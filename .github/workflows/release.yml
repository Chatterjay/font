name: Release

on:
  push:
    branches:
      - main # 在提交到main分支时触发
      - master # 在提交到master分支时触发（适应不同的主分支命名）

# 添加权限配置
permissions:
  contents: write
  
jobs:
  release:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build the app
        run: npm run build

      - name: Get package version
        id: package_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package_version.outputs.version }}-${{ github.sha }}
          release_name: Release v${{ steps.package_version.outputs.version }}-${{ github.run_number }}
          body: |
            自动构建版本
            提交SHA: ${{ github.sha }}
            构建时间: ${{ github.event.repository.updated_at }}
          draft: false
          prerelease: false

      - name: Zip build files
        run: |
          cd dist
          7z a -tzip ../font-viewer-${{ steps.package_version.outputs.version }}.zip *
        shell: pwsh

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./font-viewer-${{ steps.package_version.outputs.version }}.zip
          asset_name: font-viewer-${{ steps.package_version.outputs.version }}.zip
          asset_content_type: application/zip 